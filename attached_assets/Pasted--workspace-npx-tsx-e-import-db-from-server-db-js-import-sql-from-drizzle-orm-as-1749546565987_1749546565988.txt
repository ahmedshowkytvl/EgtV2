~/workspace$ npx tsx -e " import { db } from './server/db.js'; import { sql } from 'drizzle-orm'; async function addMissingColumn() { try { await db.execute(sql\` ALTER TABLE packages ADD COLUMN IF NOT EXISTS short_description TEXT; \`); console.log('✅ Added short_description column to packages table'); } catch (error) { console.error('❌ Error adding column:', error); } process.exit(0); } addMissingColumn(); "
/home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:2
//# sourceMappingURL=data:application/json;base64,`,N=c(()=>process.sourceMapsEnabled??!0,"shouldApplySourceMap"),S=c(({code:t,map:e})=>t+Z+Buffer.from(JSON.stringify(e),"utf8").toString("base64"),"inlineSourceMap"),q=[".cts",".mts",".ts",".tsx",".jsx"],ee=[".js",".cjs",".mjs"],C=[".ts",".tsx",".jsx"],w=c((t,e,r,n)=>{const s=Object.getOwnPropertyDescriptor(t,e);s?.set?t[e]=r:(!s||s.configurable)&&Object.defineProperty(t,e,{value:r,enumerable:s?.enumerable||n?.enumerable,writable:n?.writable??(s?s.writable:!0),configurable:n?.configurable??(s?s.configurable:!0)})},"safeSet"),te=c((t,e,r)=>{const n=e[".js"],s=c((a,i)=>{if(t.enabled===!1)return n(a,i);const[l,f]=i.split("?");if((new URLSearchParams(f).get("namespace")??void 0)!==r)return n(a,i);a.id.startsWith("data:text/javascript,")&&(a.path=m.dirname(l)),U.parent?.send&&U.parent.send({type:"dependency",path:l});const d=q.some(h=>l.endsWith(h)),P=ee.some(h=>l.endsWith(h));if(!d&&!P)return n(a,l);let u=G.readFileSync(l,"utf8");if(l.endsWith(".cjs")){const h=v.transformDynamicImport(i,u);h&&(u=N()?S(h):h.code)}else if(d||v.isESM(u)){const h=v.transformSync(u,i,{tsconfigRaw:exports.fileMatcher?.(l)});u=N()?S(h):h.code}a._compile(u,l)},"transformer");w(e,".js",s);for(const a of C)w(e,a,s,{enumerable:!r,writable:!0,configurable:!0});return w(e,".mjs",s,{writable:!0,configurable:!0}),()=>{e[".js"]===s&&(e[".js"]=n);for(const a of[...C,".mjs"])e[a]===s&&delete e[a]}},"createExtensions"),se=c(t=>e=>{if((e==="."||e===".."||e.endsWith("/.."))&&(e+="/"),_.test(e)){let r=m.join(e,"index.js");e.startsWith("./")&&(r=`./${r}`);try{return t(r)}catch{}}try{return t(e)}catch(r){const n=r;if(n.code==="MODULE_NOT_FOUND")try{return t(`${e}${m.sep}index.js`)}catch{}throw n}},"createImplicitResolver"),A=[".js",".json"],J=[".ts",".tsx",".jsx"],ne=[...J,...A],re=[...A,...J],g=Object.create(null);g[".js"]=[".ts",".tsx",".js",".jsx"],g[".jsx"]=[".tsx",".ts",".jsx",".js"],g[".cjs"]=[".cts"],g[".mjs"]=[".mts"];const Q=c(t=>{const e=t.split("?"),r=e[1]?`?${e[1]}`:"",[n]=e,s=m.extname(n),a=[],i=g[s];if(i){const f=n.slice(0,-s.length);a.push(...i.map(o=>f+o+r))}const l=!(t.startsWith(E)||y(n))||n.includes($)||n.includes("/node_modules/")?re:ne;return a.push(...l.map(f=>n+f+r)),a},"mapTsExtensions"),b=c((t,e,r)=>{if(_.test(e)||!r&&!exports.allowJs)return;const n=Q(e);if(n)for(const s of n)try{return t(s)}catch(a){const{code:i}=a;if(i!=="MODULE_NOT_FOUND"&&i!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw a}},"resolveTsFilename"),ae=c((t,e)=>r=>{if(y(r)){const n=b(t,r,e);if(n)return n}try{return t(r)}catch(n){const s=n;if(s.code==="MODULE_NOT_FOUND"){if(typeof s.path=="string"&&s.path.endsWith(`${m.sep}package.json`)){const i=s.message.match(/^Cannot find module '([^']+)'$/);if(i){const f=i[1],o=b(t,f,e);if(o)return o}const l=s.message.match(/^Cannot find module '([^']+)'. Please verify that the package.json has a valid "main" entry$/);if(l){const f=l[1],o=b(t,f,e);if(o)return o}}const a=b(t,r,e);if(a)return a}throw s}},"createTsExtensionResolver"),I="at cjsPreparseModuleExports (node:internal",ce=c(t=>{const e=t.stack.split(`


Error: Cannot find module './server/db.js'
Require stack:
- /home/runner/workspace/[eval]
    at Module._resolveFilename (node:internal/modules/cjs/loader:1225:15)
    at nextResolveSimple (/home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:3:942)
    at /home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:2:2550
    at /home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:2:1624
    at resolveTsPaths (/home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:3:760)
    at /home/runner/workspace/node_modules/tsx/dist/register-D2KMMyKp.cjs:3:1038
    at m._resolveFilename (file:///home/runner/workspace/node_modules/tsx/dist/register-hc1YoAqe.mjs:1:789)
    at Module._load (node:internal/modules/cjs/loader:1051:27)
    at Module.require (node:internal/modules/cjs/loader:1311:19)
    at require (node:internal/modules/helpers:179:18) {
  code: 'MODULE_NOT_FOUND',
  requireStack: [ '/home/runner/workspace/[eval]' ]
}

Node.js v20.18.1